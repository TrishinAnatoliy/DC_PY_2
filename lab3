class Book:
    
    def __init__(self, name: str, author: str):
        """
        Создание и подготовка к работе объекта класса Книга.

        :param name: - Название книги
        :param author: - автор

        Пример:
        >>> book = Book("Парри Готтер", "Джон Колинг") 
        """
        self.name = name

        if not isinstance(name, str):
            raise TypeError("Название книги должно иметь тип str")
        
        self.author = author

        if not isinstance(author, str):
            raise TypeError("Автор должен иметь тип str")
    
    @property
    def name(self):
        return self.author
    
    @property
    def author(self):
        return self.author

    def __str__(self):
        return f"Книга {self.name}. Автор {self.author}"

    def __repr__(self):
        return f"{self.__class__.__name__}(name={self.name!r}, author={self.author!r})"


class PaperBook(Book):
    
    def __init__(self, pages: int):
        """
        Создание и подготовка к работе объекта класса Бумажная Книга.

        :param pages: - Количество страниц в книге
        """
        self.pages = pages
        
        if not isinstance(pages, int):
            raise TypeError("Количество страниц должно иметь тип int")

        if not pages > 0:
            raise ValueError("Количество страниц в книге должно быть больше 0")
        
        super().__init__(name, author)

    def __str__(self):
        return super().__str__

    def __repr__(self):
        return f"{self.__class__.__name__}(name={self.name!r}, author={self.author!r}, pages={self.pages!r})"


class AudioBook(Book):
    
    def __init__(self, duration: float):
        """
        Создание и подготовка к работе объекта класса Аудиокнига.

        :param duration: - Продолжительность книги
        """
        self.duration = duration
        
        if not isinstance(duration, float):
            raise TypeError("Продолжительность аудиокниги должна иметь тип float")

        if not duration > 0:
            raise ValueError("Продолжительность аудиокниги должна быть больше 0")

        super().__init__(name, author)

    def __str__(self):
        return super().__str__

    def __repr__(self):
        return f"{self.__class__.__name__}(name={self.name!r}, author={self.author!r}, duration={self.duration!r})"